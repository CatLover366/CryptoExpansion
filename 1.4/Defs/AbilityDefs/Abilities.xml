<?xml version="1.0" encoding="utf-8"?>

<Defs>

  <AbilityDef Name="CB_AbilityBase" Abstract="True">
    <abilityClass>Ability</abilityClass>
    <category>CB_Equipment</category>
    <!--<statBases>
		  <Ability_Duration>0</Ability_Duration>
		</statBases>-->
    <warmupSound>PsycastCastLoop</warmupSound>
    <verbProperties>
      <verbClass>Verb_CastAbility</verbClass>
      <range>24.9</range>
      <requireLineOfSight>True</requireLineOfSight>
      <warmupTime>1</warmupTime>
      <targetParams>
        <canTargetBuildings>False</canTargetBuildings>
        <canTargetAnimals>False</canTargetAnimals>
        <thingCategory>Item</thingCategory>
        <mapObjectTargetsMustBeAutoAttackable>False</mapObjectTargetsMustBeAutoAttackable>
      </targetParams>
    </verbProperties>
  </AbilityDef>

  <AbilityCategoryDef>
    <defName>CB_Equipment</defName>
    <displayOrder>10</displayOrder>
  </AbilityCategoryDef>


  <AbilityDef ParentName="CB_AbilityBase">
    <defName>CB_IceWallRaise</defName>
    <label>icewall</label>
    <description>Form a temporary wall of ice around the target location.</description>
    <iconPath>UI/Abilities/Wallraise</iconPath>
    <writeCombatLog>True</writeCombatLog>
    <hotKey>Misc10</hotKey>
    <!--<statBases>
			<Ability_EntropyGain>35</Ability_EntropyGain>
			<Ability_PsyfocusCost>0.02</Ability_PsyfocusCost>
		</statBases>-->
    <verbProperties>
      <targetParams Inherit="False">
        <canTargetPawns>False</canTargetPawns>
        <canTargetLocations>True</canTargetLocations>
      </targetParams>
    </verbProperties>
    <comps>
      <li Class="CryptoExpansion.CompProperties_AbilityWallraise_General">
        <compClass>CryptoExpansion.CompAbilityEffect_Wallraise_General</compClass>
        <wallDef>CB_Icewall</wallDef>
        <puffColor>(0, 0, 0)</puffColor>
        <pattern>
          <li>(2, 0)</li>
          <li>(2, 1)</li>
          <li>(2, -1)</li>
          <li>(-2, 0)</li>
          <li>(-2, 1)</li>
          <li>(-2, -1)</li>
          <li>(0, 2)</li>
          <li>(1, 2)</li>
          <li>(-1, 2)</li>
          <li>(0, -2)</li>
          <li>(1, -2)</li>
          <li>(-1, -2)</li>
          <li>(1, 1)</li>
          <li>(1, -1)</li>
          <li>(-1, 1)</li>
          <li>(-1, -1)</li>
        </pattern>
        <screenShakeIntensity>1.0</screenShakeIntensity>
        <clamorType>Ability</clamorType>
        <clamorRadius>25</clamorRadius>
        <sound>PsycastWallraise</sound>
      </li>
      <li Class="CompProperties_AbilityEffecterOnTarget">
        <effecterDef>Skip_Exit</effecterDef>
        <maintainForTicks>60</maintainForTicks>
        <scale>1.55</scale>
      </li>
      <li Class="CompProperties_AbilityFleckOnTarget">
        <fleckDefs>
          <li>PsycastSkipInnerExit</li>
          <li>PsycastSkipOuterRingExit</li>
        </fleckDefs>
        <scale>1.55</scale>
        <sound>Psycast_Skip_Exit</sound>
        <preCastTicks>5</preCastTicks>
      </li>
    </comps>
  </AbilityDef>

  <AbilityDef>
    <defName>CB_CryptoClot</defName>
    <label>cryolize</label>
    <description>Infernal mechanites accumulate their stored plasma in the mouth of the user, expelling it in a fiery blast.</description>
    <iconPath>UI/Abilities/Infernal_breath</iconPath>
    <cooldownTicksRange>20000</cooldownTicksRange>
    <aiCanUse>true</aiCanUse>
    <warmupStartSound>HB_InfernalBreath_Warmup</warmupStartSound>
    <showWhenDrafted>true</showWhenDrafted>
    <statBases>
      <Ability_Duration>1000</Ability_Duration>
    </statBases>
    <verbProperties>
      <verbClass>Verb_CastAbility</verbClass>
      <range>8.5</range>
      <warmupTime>1</warmupTime>
      <soundCast>HB_InfernalBreath_Resolve</soundCast>
      <targetParams>
        <canTargetSelf>True</canTargetSelf>
        <canTargetAnimals>True</canTargetAnimals>
      </targetParams>
    </verbProperties>
    <comps>
      <li Class="CompProperties_AbilityGiveHediff">
        <compClass>CompAbilityEffect_GiveHediff</compClass>
        <hediffDef>CB_CryptoClot</hediffDef>
      </li>
    </comps>
  </AbilityDef>

</Defs>
